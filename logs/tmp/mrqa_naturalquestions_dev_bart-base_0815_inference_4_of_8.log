10/29/2021 17:04:44 - INFO - __main__ - Config args: Namespace(append_another_bos=True, checkpoint='', dataset='mrqa', debug=False, dev_file='', do_lowercase=False, do_predict=True, do_train=False, max_input_length=888, max_output_length=50, model='facebook/bart-base', num_beams=3, output_dir='out/mrqa_squad_bart-base_1029_upstream_model/', predict_batch_size=64, predict_checkpoint='out/mrqa_squad_bart-base_1029_upstream_model//best-model.pt', prefix='', quiet=False, seed=42, train_file='')
10/29/2021 17:04:44 - INFO - __main__ - dataset_size=4479, num_shards=8, local_shard_id=4
10/29/2021 17:04:45 - INFO - transformers.tokenization_utils - loading file https://s3.amazonaws.com/models.huggingface.co/bert/roberta-large-vocab.json from cache at /private/home/yuchenlin/.cache/torch/transformers/1ae1f5b6e2b22b25ccc04c000bb79ca847aa226d0761536b011cf7e5868f0655.ef00af9e673c7160b4d41cfda1f48c5f4cba57d5142754525572a846a1ab1b9b
10/29/2021 17:04:45 - INFO - transformers.tokenization_utils - loading file https://s3.amazonaws.com/models.huggingface.co/bert/roberta-large-merges.txt from cache at /private/home/yuchenlin/.cache/torch/transformers/f8f83199a6270d582d6245dc100e99c4155de81c9745c6248077018fe01abcfb.70bec105b4158ed9a1747fea67a43f5dee97855c64d62b6ec3742f4cfdb5feda
10/29/2021 17:04:45 - INFO - __main__ - Start tokenizing ... 560 instances
10/29/2021 17:04:45 - INFO - __main__ - Printing 3 examples
10/29/2021 17:04:45 - INFO - __main__ - Question: what is the most popular item to put on top of a christmas tree ? </s> Context: A tree - topper or treetopper is a decorative ornament placed on the top ( or `` crown '' ) of a Christmas tree or Hanukkah bush . Tree - toppers can take any form , but the most common shapes are a star ( representing either the Star of Bethlehem or the Star of David ) , finials , angels ( `` Christmas angel '' ) , or fairies . Other tree - toppers include paper rosettes , ribbon bows , Father Christmases or Santa Clauses , Christian crosses , owls , and sunbursts .
10/29/2021 17:04:45 - INFO - __main__ - ["a star ( representing either the Star of Bethlehem or the Star of David ) , finials , angels ( `` Christmas angel '' ) , or fairies"]
10/29/2021 17:04:45 - INFO - __main__ - Question: what does the air gap do on a dishwasher ? </s> Context: A common use of the term `` air gap '' in home plumbing refers to a fixture that provides back - flow prevention for an installed dishwasher . This `` air gap '' is seen above the countertop as a small cylindrical fixture mounted parallel with the faucet . Below the countertop , the drain pipe of the dishwasher feeds the `` top '' of the air gap , and the `` bottom '' of the air gap is plumbed into the sink drain below the basket , or into a garbage disposal unit . When installed and maintained properly , the air gap works as described above , and prevents drain water from the sink from backing up into the dishwasher , possibly contaminating dishes . Water flowing from the fixture into the sink indicates a need for maintenance or repair .
10/29/2021 17:04:45 - INFO - __main__ - ['prevents drain water from the sink from backing up into the dishwasher , possibly contaminating dishes']
10/29/2021 17:04:45 - INFO - __main__ - Question: where does the english channel begin and end ? </s> Context: <Dl> <Dd> <Dl> <Dd> On the west . A line joining Isle Vierge ( 48 ° 38 ′ 23 '' N 4 ° 34 ′ 13 '' W ﻿ / ﻿ 48.63972 ° N 4.57028 ° W ﻿ / 48.63972 ; - 4.57028 ) to Lands End ( 50 ° 04 ′ N 5 ° 43 ′ W ﻿ / ﻿ 50.067 ° N 5.717 ° W ﻿ / 50.067 ; - 5.717 ) . </Dd> <Dd> On the east . The southwestern limit of the North Sea . </Dd> </Dl> </Dd> </Dl>
10/29/2021 17:04:45 - INFO - __main__ - ["On the west . A line joining Isle Vierge ( 48 ° 38 ′ 23 '' N 4 ° 34 ′ 13 '' W \ufeff / \ufeff 48.63972 ° N 4.57028 ° W \ufeff / 48.63972 ; - 4.57028 ) to Lands End ( 50 ° 04 ′ N 5 ° 43 ′ W \ufeff / \ufeff 50.067 ° N 5.717 ° W \ufeff / 50.067 ; - 5.717 )", 'On the east . The southwestern limit of the North Sea']
10/29/2021 17:04:45 - INFO - __main__ - Tokenizing Input ...
10/29/2021 17:04:46 - INFO - __main__ - Tokenizing Input ... Done!
10/29/2021 17:04:46 - INFO - __main__ - Tokenizing Output ...
10/29/2021 17:04:46 - INFO - __main__ - Tokenizing Output ... Done!
10/29/2021 17:04:46 - INFO - __main__ - Loaded 560 examples from dev data
10/29/2021 17:04:46 - INFO - __main__ - Loading checkpoint from out/mrqa_squad_bart-base_1029_upstream_model//best-model.pt ....
10/29/2021 17:04:50 - INFO - transformers.configuration_utils - loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/facebook/bart-base/config.json from cache at /private/home/yuchenlin/.cache/torch/transformers/09f4fcaeaf785dd3b97b085d6e3510c7081f586ec8e75981683c6299c0f81d9d.e8d516ad807436d395effad8c2326786872659b7dd1210827ac67c761198a0eb
10/29/2021 17:04:50 - INFO - transformers.configuration_utils - Model config BartConfig {
  "activation_dropout": 0.1,
  "activation_function": "gelu",
  "add_bias_logits": false,
  "add_final_layer_norm": false,
  "architectures": [
    "BartModel",
    "BartForConditionalGeneration",
    "BartForSequenceClassification"
  ],
  "attention_dropout": 0.1,
  "bos_token_id": 0,
  "classif_dropout": 0.0,
  "d_model": 768,
  "decoder_attention_heads": 12,
  "decoder_ffn_dim": 3072,
  "decoder_layerdrop": 0.0,
  "decoder_layers": 6,
  "decoder_start_token_id": 2,
  "dropout": 0.1,
  "early_stopping": true,
  "encoder_attention_heads": 12,
  "encoder_ffn_dim": 3072,
  "encoder_layerdrop": 0.0,
  "encoder_layers": 6,
  "eos_token_id": 2,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2"
  },
  "init_std": 0.02,
  "is_encoder_decoder": true,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_2": 2
  },
  "max_position_embeddings": 1024,
  "model_type": "bart",
  "no_repeat_ngram_size": 3,
  "normalize_before": false,
  "normalize_embedding": true,
  "num_beams": 4,
  "num_hidden_layers": 6,
  "pad_token_id": 1,
  "scale_embedding": false,
  "static_position_embeddings": false,
  "task_specific_params": {
    "summarization": {
      "length_penalty": 1.0,
      "max_length": 128,
      "min_length": 12,
      "num_beams": 4
    },
    "summarization_cnn": {
      "length_penalty": 2.0,
      "max_length": 142,
      "min_length": 56,
      "num_beams": 4
    },
    "summarization_xsum": {
      "length_penalty": 1.0,
      "max_length": 62,
      "min_length": 11,
      "num_beams": 6
    }
  },
  "vocab_size": 50265
}

10/29/2021 17:04:50 - INFO - transformers.modeling_utils - loading weights file https://cdn.huggingface.co/facebook/bart-base/pytorch_model.bin from cache at /private/home/yuchenlin/.cache/torch/transformers/566c05fb6983817e8ad7a4fa51e3099fe9caa3b31730f964bc5198d71c677523.0a3d95c18c1e434448941bc25accea7b122882be6526fb67c8e8fb6d5ebc711c
10/29/2021 17:04:55 - INFO - __main__ - Loading checkpoint from out/mrqa_squad_bart-base_1029_upstream_model//best-model.pt .... Done!
10/29/2021 17:05:01 - INFO - __main__ - Starting inference ...
Infernece:   0%|          | 0/9 [00:00<?, ?it/s]Infernece:  11%|█         | 1/9 [00:05<00:43,  5.45s/it]Infernece:  22%|██▏       | 2/9 [00:10<00:37,  5.32s/it]Infernece:  33%|███▎      | 3/9 [00:14<00:29,  4.83s/it]Infernece:  44%|████▍     | 4/9 [00:17<00:22,  4.51s/it]Infernece:  56%|█████▌    | 5/9 [00:22<00:17,  4.49s/it]Infernece:  67%|██████▋   | 6/9 [00:27<00:13,  4.63s/it]Infernece:  78%|███████▊  | 7/9 [00:31<00:08,  4.37s/it]Infernece:  89%|████████▉ | 8/9 [00:36<00:04,  4.64s/it]Infernece: 100%|██████████| 9/9 [00:39<00:00,  4.06s/it]Infernece: 100%|██████████| 9/9 [00:39<00:00,  4.34s/it]
10/29/2021 17:05:40 - INFO - __main__ - Starting inference ... Done
