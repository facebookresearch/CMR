07/29/2021 11:37:58 - INFO - __main__ - Config args: Namespace(append_another_bos=True, checkpoint='', dataset='mrqa_naturalquestions', debug=False, dev_file='', do_lowercase=False, do_predict=True, do_train=False, max_input_length=888, max_output_length=50, model='facebook/bart-base', num_beams=4, output_dir='out/mrqa_naturalquestions_bart-base_0617v4', predict_batch_size=64, predict_checkpoint='out/mrqa_naturalquestions_bart-base_0617v4/best-model.pt', prefix='', quiet=False, seed=42, train_file='')
07/29/2021 11:37:58 - INFO - __main__ - dataset_size=4479, num_shards=7, local_shard_id=1
/private/home/yuchenlin/.conda/envs/bartqa/lib/python3.6/site-packages/numpy/core/_asarray.py:83: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return array(a, dtype, copy=False, order=order)
07/29/2021 11:37:58 - INFO - transformers.tokenization_utils - loading file https://s3.amazonaws.com/models.huggingface.co/bert/roberta-large-vocab.json from cache at /private/home/yuchenlin/.cache/torch/transformers/1ae1f5b6e2b22b25ccc04c000bb79ca847aa226d0761536b011cf7e5868f0655.ef00af9e673c7160b4d41cfda1f48c5f4cba57d5142754525572a846a1ab1b9b
07/29/2021 11:37:58 - INFO - transformers.tokenization_utils - loading file https://s3.amazonaws.com/models.huggingface.co/bert/roberta-large-merges.txt from cache at /private/home/yuchenlin/.cache/torch/transformers/f8f83199a6270d582d6245dc100e99c4155de81c9745c6248077018fe01abcfb.70bec105b4158ed9a1747fea67a43f5dee97855c64d62b6ec3742f4cfdb5feda
07/29/2021 11:37:58 - INFO - __main__ - Start tokenizing ... 640 instances
07/29/2021 11:37:58 - INFO - __main__ - Printing 3 examples
07/29/2021 11:37:58 - INFO - __main__ - Context: Jason Ritter as Kevin Finn | Question: who stars in kevin probably save the world ?
07/29/2021 11:37:58 - INFO - __main__ - ['Jason Ritter']
07/29/2021 11:37:58 - INFO - __main__ - Context: Mexico is one of the world 's most seismically active regions , sitting atop several intersecting tectonic plates . The border between the Cocos Plate and North American Plate , along the Pacific Coast of Mexico , creates a subduction zone that generates large seismic events . Activity along the edges of the Rivera and Caribbean plates also generate seismic events . All together , these seismic forces cause an average of 40 earthquakes a day in Mexico . | Question: what type of boundary was the mexico earthquake ?
07/29/2021 11:37:58 - INFO - __main__ - ['a subduction zone']
07/29/2021 11:37:58 - INFO - __main__ - Context: For example , in the United States , a standard drink contains about 14 grams of alcohol . This corresponds to a 12 - US - fluid - ounce ( 350 ml ) glass of beer , a 5 - US - fluid - ounce ( 150 ml ) glass of 12 % wine , or a 1.5 - US - fluid - ounce ( 44 ml ) glass of spirit . | Question: how many grams of alcohol in one beer ?
07/29/2021 11:37:58 - INFO - __main__ - ['about 14 grams of alcohol']
07/29/2021 11:37:58 - INFO - __main__ - Tokenizing Input ...
07/29/2021 11:38:00 - INFO - __main__ - Tokenizing Input ... Done!
07/29/2021 11:38:00 - INFO - __main__ - Tokenizing Output ...
07/29/2021 11:38:00 - INFO - __main__ - Tokenizing Output ... Done!
07/29/2021 11:38:00 - INFO - __main__ - Loaded 640 examples from dev data
07/29/2021 11:38:00 - INFO - __main__ - Loading checkpoint from out/mrqa_naturalquestions_bart-base_0617v4/best-model.pt ....
07/29/2021 11:38:01 - INFO - transformers.configuration_utils - loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/facebook/bart-base/config.json from cache at /private/home/yuchenlin/.cache/torch/transformers/09f4fcaeaf785dd3b97b085d6e3510c7081f586ec8e75981683c6299c0f81d9d.e8d516ad807436d395effad8c2326786872659b7dd1210827ac67c761198a0eb
07/29/2021 11:38:01 - INFO - transformers.configuration_utils - Model config BartConfig {
  "activation_dropout": 0.1,
  "activation_function": "gelu",
  "add_bias_logits": false,
  "add_final_layer_norm": false,
  "architectures": [
    "BartModel",
    "BartForConditionalGeneration",
    "BartForSequenceClassification"
  ],
  "attention_dropout": 0.1,
  "bos_token_id": 0,
  "classif_dropout": 0.0,
  "d_model": 768,
  "decoder_attention_heads": 12,
  "decoder_ffn_dim": 3072,
  "decoder_layerdrop": 0.0,
  "decoder_layers": 6,
  "decoder_start_token_id": 2,
  "dropout": 0.1,
  "early_stopping": true,
  "encoder_attention_heads": 12,
  "encoder_ffn_dim": 3072,
  "encoder_layerdrop": 0.0,
  "encoder_layers": 6,
  "eos_token_id": 2,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2"
  },
  "init_std": 0.02,
  "is_encoder_decoder": true,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_2": 2
  },
  "max_position_embeddings": 1024,
  "model_type": "bart",
  "no_repeat_ngram_size": 3,
  "normalize_before": false,
  "normalize_embedding": true,
  "num_beams": 4,
  "num_hidden_layers": 6,
  "pad_token_id": 1,
  "scale_embedding": false,
  "static_position_embeddings": false,
  "task_specific_params": {
    "summarization": {
      "length_penalty": 1.0,
      "max_length": 128,
      "min_length": 12,
      "num_beams": 4
    },
    "summarization_cnn": {
      "length_penalty": 2.0,
      "max_length": 142,
      "min_length": 56,
      "num_beams": 4
    },
    "summarization_xsum": {
      "length_penalty": 1.0,
      "max_length": 62,
      "min_length": 11,
      "num_beams": 6
    }
  },
  "vocab_size": 50265
}

07/29/2021 11:38:01 - INFO - transformers.modeling_utils - loading weights file https://cdn.huggingface.co/facebook/bart-base/pytorch_model.bin from cache at /private/home/yuchenlin/.cache/torch/transformers/566c05fb6983817e8ad7a4fa51e3099fe9caa3b31730f964bc5198d71c677523.0a3d95c18c1e434448941bc25accea7b122882be6526fb67c8e8fb6d5ebc711c
07/29/2021 11:38:08 - INFO - __main__ - Loading checkpoint from out/mrqa_naturalquestions_bart-base_0617v4/best-model.pt .... Done!
07/29/2021 11:38:14 - INFO - __main__ - Starting inference ...
Infernece:   0%|          | 0/10 [00:00<?, ?it/s]Infernece:  10%|█         | 1/10 [00:06<01:02,  6.98s/it]Infernece:  20%|██        | 2/10 [00:14<00:57,  7.15s/it]Infernece:  30%|███       | 3/10 [00:22<00:51,  7.38s/it]Infernece:  40%|████      | 4/10 [00:28<00:41,  6.96s/it]Infernece:  50%|█████     | 5/10 [00:34<00:33,  6.75s/it]Infernece:  60%|██████    | 6/10 [00:40<00:25,  6.34s/it]Infernece:  70%|███████   | 7/10 [00:45<00:18,  6.10s/it]Infernece:  80%|████████  | 8/10 [00:51<00:11,  5.99s/it]Infernece:  90%|█████████ | 9/10 [00:58<00:06,  6.47s/it]Infernece: 100%|██████████| 10/10 [01:04<00:00,  6.32s/it]Infernece: 100%|██████████| 10/10 [01:04<00:00,  6.49s/it]
07/29/2021 11:39:19 - INFO - __main__ - Starting inference ... Done
